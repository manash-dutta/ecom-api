{
  "openapi": "3.0.0",
  "info": {
    "title": "Comment API",
    "version": "1.0.0",
    "description": "API for managing comments on posts."
  },
  "paths": {
    "/api/comments/{id}": {
      "get": {
        "summary": "Get all comments for a post",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to retrieve comments for"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new comment on a post",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Post ID to create a comment for"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, content is required"
          }
        }
      },
      "put": {
        "summary": "Update a comment",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comment ID to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, content is required"
          }
        }
      },
      "delete": {
        "summary": "Delete a comment",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Comment ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Comment deleted successfully"
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User Signup",
        "description": "Creates a new user in the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the comment"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user who created the comment"
          },
          "postId": {
            "type": "integer",
            "description": "ID of the post the comment is associated with"
          },
          "content": {
            "type": "string",
            "description": "Content of the comment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the comment was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the comment was last updated"
          }
        }
      },
      "NewComment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Content of the new comment"
          }
        },
        "required": ["content"]
      },
      "UpdateComment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Updated content of the comment"
          }
        },
        "required": ["content"]
      }
    }
  }
}
